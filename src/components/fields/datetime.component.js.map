{"version":3,"file":"datetime.component.js","sourceRoot":"","sources":["datetime.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAkFpE,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,qBAAqB;IAI1D,YAA+B,QAAkB;QAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;QAAtC,aAAQ,GAAR,QAAQ,CAAU;IAAqB,CAAC;IAEvE,IAAI,OAAO;QACT,OAAQ,IAAI,CAAC,KAAK,CAAC,SAAmC,CAAC,QAA+B,CAAC;IACzF,CAAC;CAEF,CAAA;AAVY,iBAAiB;IA/E7B,SAAS,CAAC;QACT,8DAA8D;QAC9D,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BT;QACD,UAAU,EAAE,KAAK;KAClB,CAAC;IAEF,0CAA0C;IAC1C,+FAA+F;IAC/F,0BAA0B;IAC1B,4BAA4B;IAC5B,8BAA8B;IAC9B,iCAAiC;IACjC,sFAAsF;IACtF,gFAAgF;IAChF,oHAAoH;IACpH,0FAA0F;IAC1F,sFAAsF;IACtF,2CAA2C;IAC3C,kEAAkE;IAClE,oDAAoD;IACpD,mDAAmD;IACnD,qDAAqD;IACrD,kDAAkD;IAClD,6CAA6C;IAC7C,mDAAmD;IACnD,mDAAmD;IACnD,yCAAyC;IACzC,uDAAuD;IACvD,yCAAyC;IACzC,yDAAyD;IACzD,wCAAwC;IACxC,+DAA+D;IAC/D,qEAAqE;IACrE,yEAAyE;IACzE,iEAAiE;IACjE,yCAAyC;IACzC,sEAAsE;IACtE,mDAAmD;IACnD,qDAAqD;IACrD,kEAAkE;IAClE,oEAAoE;IACpE,6EAA6E;IAC7E,sEAAsE;IACtE,kBAAkB;IAClB,gCAAgC;IAChC,6BAA6B;IAC7B,2BAA2B;IAC3B,uBAAuB;;qCAMoB,QAAQ;GAJtC,iBAAiB,CAU7B","sourcesContent":["import { Component, Injector } from '@angular/core';\r\n\r\nimport { DatetimeComponentType, DatetimeControlType, FieldType } from '../../core/types';\r\nimport { DynamicFieldComponent } from '../../core/dynamic-field.component';\r\n\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'dynamic-datetime',\r\n  template: `\r\n    <ng-container [formGroup]=\"frm\" *ngIf=\"host.hasPermission(field.component.permission)\">\r\n      <ion-item\r\n        *ngIf=\"visible(field.component.visible)\"\r\n        [disabled]=\"disabled(field.component.disabled)\"\r\n        [ngClass]=\"evalExpr(field.component.ngClass)\"\r\n        [class]=\"field.component.class\"\r\n        [ngStyle]=\"evalExpr(field.component.ngStyle)\"\r\n        [style]=\"field.component.style\"\r\n        (click)=\"evalEvent(field.component.click, $event)\"\r\n      >\r\n        <ng-container *ngIf=\"showIcon\">\r\n          <ion-icon [name]=\"iconName\" [src]=\"iconSrc\" [slot]=\"iconSlot\"\r\n            [ngClass]=\"evalExpr(icon?.ngClass)\"\r\n            [class]=\"icon?.class\"\r\n            [ngStyle]=\"evalExpr(icon?.ngStyle)\"\r\n            [style]=\"icon?.style\"\r\n            [color]=\"evalOrExpr(icon?.color)\"\r\n            [ios]=\"evalOrExpr(icon?.ios)\"\r\n            [md]=\"evalOrExpr(icon?.md)\"\r\n            [mode]=\"icon?.mode\"\r\n            [size]=\"icon?.size\"\r\n          ></ion-icon>\r\n        </ng-container>\r\n      </ion-item>\r\n      <ng-container *ngFor=\"let err of field.component.errors\">\r\n        <error-message *ngIf=\"hasError(err)\" [class]=\"err.class || 'error'\">{{evalOrExprAndTr(err.text)}}</error-message>\r\n      </ng-container>\r\n    </ng-container>\r\n  `,\r\n  standalone: false,\r\n})\r\n\r\n// <ion-text>{{ displayValue }}</ion-text>\r\n//         <ion-modal trigger=\"open-date-time-{{formControlName}}-modal\" show-backdrop=\"false\">\r\n//           <ng-template>\r\n//             <ion-content>\r\n//               <ion-datetime\r\n//                 #modalDatetime\r\n//                 (ionCancel)=\"onIonCancel($event)\" (ionChange)=\"onIonChange($event)\"\r\n//                 (ionFocus)=\"onIonFocus($event)\" (ionBlur)=\"onIonBlur($event)\"\r\n//                 (ionCancel)=\"onIonCancel($event)\" (ionChange)=\"onIonChange($event); value = modalDatetime.value;\"\r\n//                 [cancelText]=\"evalOrExprAndTr(control?.cancelText || 'buttons.cancel')\"\r\n//                 [doneText]=\"evalOrExprAndTr(control?.doneText || 'buttons.accept')\"\r\n//                 [color]=\"control?.color\"\r\n//                 [dayNames]=\"evalOrExprAndTr(control?.dayNames)\"\r\n//                 [firstDayOfWeek]=\"firstDayOfWeek\"\r\n//                 [hourCycle]=\"control?.hourCycle\"\r\n//                 [hourValues]=\"control?.hourValues\"\r\n//                 [isDateEnabled]=\"isDateEnabled\"\r\n//                 [locale]=\"control?.locale\"\r\n//                 [max]=\"evalOrExpr(control?.max)\"\r\n//                 [min]=\"evalOrExpr(control?.min)\"\r\n//                 [mode]=\"control?.mode\"\r\n//                 [monthValues]=\"control?.monthValues\"\r\n//                 [name]=\"control?.name\"\r\n//                 [presentation]=\"control?.presentation\"\r\n//                 [readonly]=\"readonly\"\r\n//                 [showClearButton]=\"control?.showClearButton\"\r\n//                 [showDefaultButtons]=\"control?.showDefaultButtons\"\r\n//                 [showDefaultTimeLabel]=\"control?.showDefaultTimeLabel\"\r\n//                 [showDefaultTitle]=\"control?.showDefaultTitle\"\r\n//                 [size]=\"control?.size\"\r\n//                 [readonly]=\"evalOrExpr(control?.readonly) || false\"\r\n//                 [value]=\"control?.formatedValue\"\r\n//                 [yearValues]=\"control?.yearValues\"\r\n//                 (ionBlur)=\"evalEvent(control?.ionBlur, $event)\"\r\n//                 (ionFocus)=\"evalEvent(control?.ionFocus, $event)\"\r\n//                 (ionChange)=\"field.value = control?.popoverDatetime.value\"\r\n//                 (ionCancel)=\"evalEvent(control?.ionCancel, $event)\"\r\n//               >\r\n//               </ion-datetime>\r\n//             </ion-content>\r\n//           </ng-template>\r\n//         </ion-modal>\r\n\r\nexport class DatetimeComponent extends DynamicFieldComponent {\r\n\r\n  declare field: FieldType;\r\n\r\n  constructor(protected override injector: Injector) { super(injector); }\r\n\r\n  get control(): DatetimeControlType {\r\n    return (this.field.component as DatetimeComponentType).datetime as DatetimeControlType;\r\n  }\r\n\r\n}\r\n"]}